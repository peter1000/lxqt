#!/bin/bash

list_ports() {
	cd $PORT_BASE && find . -name Pkgfile -follow -printf "%h\n" | sed 's|^./||g' | sort
}
checkBinaryValid()
{
	if [ ! -d ${BINARY_BASE} ]; then
		echo "The directory ${BINARY_BASE} doesn't exist"
		echo "Please fix your setting in /etc/cards.conf.d/$COLLECTION.conf file"
		echo "Variable 'BINARY_BASE'"
		exit 1
	fi
	cd ${BINARY_BASE}
	for DIR in *
	do
		if [ -d $DIR ]; then
			if [ ! -d $PORT_BASE/$DIR ]; then
				echo "'$DIR' should be removed and delete from the .PKGREPO file"
				rm -vr $DIR
				[ -f .PKGREPO ] && sed -i "/#$DIR#/d" .PKGREPO
			else
				rsync -au  --exclude="*cards.tar*" --exclude=".PKGREPO" --delete ${PORT_BASE}/$DIR/ ${BINARY_BASE}/$DIR/	
			fi
		fi
	done
}
checkNewPort()
{
	if [ ! -d ${PORT_BASE} ]; then
		echo "The directory ${PORT_BASE} doesn't exist"
		echo "Please fix your setting in /etc/cards.conf.d/$COLLECTION.conf file"
		echo "Variable 'PORT_BASE'"
		exit 1
	fi
	cd ${PORT_BASE}
	for DIR in *
	do
		if [ ! -d ${BINARY_BASE}/$DIR ] || [ ! -f ${BINARY_BASE}/$DIR/Pkgfile ]; then
			echo "'$DIR' should be added"
			rsync -av --delete ${PORT_BASE}/$DIR/ ${BINARY_BASE}/$DIR/
		fi
		if [ ! -f ${BINARY_BASE}/$DIR/.PKGREPO ];then
			echo "$DIR should be build"
		fi
	done
}
list_diff()
{
	ports_list=`mktemp` || exit 1
	binaries_list=`mktemp` || exit 1
	output=`mktemp` || exit 1
	output_sorted=`mktemp` || exit 1
	found="no"

	cards list -p | grep -v ^Number >> $binaries_list
	list_ports >> $ports_list

	for binary_package in `cat $binaries_list | gawk '{ print $1 }'`; do
		binary_package_version=`cat $binaries_list | grep "^$binary_package " | gawk '{ print $2 }'| cut -d "-" -f1`
		binary_package_release=`cat $binaries_list | grep "^$binary_package " | gawk '{ print $2 }'| cut -d "-" -f2`
		if [ "$binary_package_version" == "" ]; then
			base_binary_package=`echo $binary_package | cut -d "-" -f1`
			if [ "$base_binary_package" != "$binary_package" ]; then
				binary_package_version=`cat $binaries_list | grep "^$base_binary_package " | gawk '{ print $2 }'| cut -d "-" -f1`
				binary_package_release=`cat $binaries_list | grep "^$base_binary_package " | gawk '{ print $2 }'| cut -d "-" -f2`
			fi
		fi
		binary_version=`echo $binary_package_version-$binary_package_release`
		package=$binary_package
		if [ -f $PORT_BASE/$package/Pkgfile ]; then
			base_package=`echo $package | cut -d "-" -f1`
			cd $PORT_BASE/$package
			version=""
			release=""
			. Pkgfile
			if [ "$version" = "" ] && [ "$base_package" != "$package" ] ; then 
				if [ -f $PORT_BASE/$base_package/Pkgfile ]; then
					cd $PORT_BASE/$base_package
					. Pkgfile
				fi
			fi
			[ -z $release ] && release=1
			port_version=`echo $version-$release`
			if [ "$binary_version" != "$port_version" ]; then
				echo "$package $port_version $binary_version" >> $output
				found="yes"
			fi
		fi
	done
	if [ "$found" = "yes" ]; then
		echo "Name Port Compiled" >> $output_sorted
		sort $output >> $output_sorted
		column -t $output_sorted
	else
		echo "Binaries from $COLLECTION OK"
	fi
}
COLLECTION="`basename $0`"

GIT=`pwd`

if [ ! -d .git ] && [ ! -d scripts ]; then 
   echo "Make shure you are at the root of the git"
   echo "Your are in: $GIT"
   exit 1
fi

# git pull

if [ ! -d "$COLLECTION" ]; then
   echo "I dont know the collection $COLLECTION"
   exit 1
fi

if [ ! -f /etc/cards.conf.d/$COLLECTION.conf ] ; then
	echo "Create $COLLECTION.conf file"
	[ ! -d /etc/cards.conf.d ] && mkdir -p /etc/cards.conf.d
	echo "PORT_BASE=/$GIT/$COLLECTION
BINARY_BASE=/houaphan/$COLLECTION" > /etc/cards.conf.d/$COLLECTION.conf
fi

. /etc/cards.conf.d/$COLLECTION.conf

[ -z $COLLECTION ] && COLLECTION="`basename $0`"

[ -z $PORT_BASE ] && PORT_BASE=/home/thierry/devel/git/saravane/$COLLECTION
[ -z $BINARY_BASE ] && BINARY_BASE=/root/saravane/$COLLECTION

[ ! -d $BINARY_BASE ] && mkdir -p $BINARY_BASE

if [ $# -lt 1 ]; then
	echo "No name port passed, check what's valid"
	checkBinaryValid
	echo "check what's new"
	checkNewPort
	list_diff
	exit 0
fi

if [ ! -d "$PORT_BASE/$1" ]; then
	echo "I dont know the port $1"
	exit 1
fi

rsync -avu --exclude '.*.swp'  --exclude '*~'  --delete-after ${PORT_BASE}/$1/ \
${BINARY_BASE}/$1/

chown -R 0:0 ${BINARY_BASE}/$1/

cards create -r $1
